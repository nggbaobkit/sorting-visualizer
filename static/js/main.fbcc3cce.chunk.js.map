{"version":3,"sources":["SortingVisualizer/SortingVisualizer.scss","ArrayBar/ArrayBar.scss","Footer/Footer.scss","SortingAlgorithms/MergeSort.js","SortingAlgorithms/Utilities.js","SortingAlgorithms/QuickSort.js","SortingAlgorithms/HeapSort.js","ArrayBar/ArrayBar.jsx","Footer/Footer.js","SortingVisualizer/SortingVisualizer.jsx","SortingAlgorithms/BubbleSort.js","App.js","serviceWorker.js","index.js","styles/core.scss"],"names":["module","exports","getMergeSortAnimations","arr","array","slice","animations","length","auxiliaryArray","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","swap","a","b","temp","pushAnimations","getQuickSortAnimations","quickSortAnimations","doQuickSort","start","end","index","pivotIndex","pivotElement","partition","getHeapSortAnimations","arrayLength","heapify","doHeapSort","left","right","max","ArrayBar","props","numWidth","$","document","width","numMargin","margin","color","fontSize","className","map","value","idx","key","style","height","marginLeft","marginRigh","Footer","href","target","rel","Component","PRIMARY_COLOR","variables","primaryColor","SORTING_COLOR","sortingColor","SortingVisualizer","state","arraySize","isDisabled","this","setState","resetArray","prevProps","prevState","pow","randomIntFromInterval","swappedArray","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","setTimeout","backgroundColor","getAnimationSpeed","newOneHeight","newTwoHeight","performAnimations","getBubbleSortAnimations","top","src","alt","paddingLeft","class","type","min","id","disabled","onChange","e","Button","primary","onClick","secondary","mergeSort","bubbleSort","quickSort","heapSort","React","random","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fbcc3cce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"rgba(0,32,63,0.8)\",\"secondaryColor\":\"rgba(215,240,229,0.6)\",\"sortingColor\":\"#f2aa4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"rgba(0,32,63,0.8)\",\"secondaryColor\":\"rgba(215,240,229,0.6)\",\"sortingColor\":\"#f2aa4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"rgba(0,32,63,0.8)\",\"secondaryColor\":\"rgba(215,240,229,0.6)\",\"sortingColor\":\"#f2aa4c\"};","export function getMergeSortAnimations(arr) {\n  let array = arr.slice();\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, k, auxiliaryArray[i], auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, k, auxiliaryArray[j], auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, k, auxiliaryArray[i], auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, k, auxiliaryArray[j], auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","export function swap(arr, a, b) {\n  let temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n}\n\nexport function pushAnimations(animations, arr, a, b) {\n  animations.push([a, b]);\n  animations.push([a, b]);\n  animations.push([a, b, arr[b], arr[a]]);\n}\n","import { swap, pushAnimations } from './Utilities';\n\nexport function getQuickSortAnimations(array) {\n  let quickSortAnimations = [];\n  doQuickSort(array, 0, array.length - 1, quickSortAnimations);\n  return quickSortAnimations;\n}\n\nfunction partition(arr, start, end, animations) {\n  let pivotIndex = start;\n  let pivotElement = arr[end];\n  for (let i = start; i < end; i++) {\n    if (arr[i] < pivotElement) {\n      pushAnimations(animations, arr, i, pivotIndex);\n      swap(arr, i, pivotIndex);\n      pivotIndex++;\n    }\n  }\n  pushAnimations(animations, arr, pivotIndex, end);\n  swap(arr, pivotIndex, end);\n  return pivotIndex;\n}\n\nfunction doQuickSort(arr, start, end, animations) {\n  let array = arr.slice();\n  if (start >= end) {\n    return;\n  }\n\n  const index = partition(array, start, end, animations);\n  doQuickSort(array, start, index - 1, animations);\n  doQuickSort(array, index + 1, end, animations);\n}\n","import { swap, pushAnimations } from './Utilities';\n\nexport function getHeapSortAnimations(array) {\n  let animations = [];\n  doHeapSort(array, animations);\n  return animations;\n}\n\nfunction heapify(array, arrayLength, i, animations) {\n  var left = 2 * i + 1;\n  var right = 2 * i + 2;\n  var max = i;\n\n  if (left < arrayLength && array[left] > array[max]) {\n    max = left;\n  }\n\n  if (right < arrayLength && array[right] > array[max]) {\n    max = right;\n  }\n\n  if (max !== i) {\n    pushAnimations(animations, array, i, max);\n    swap(array, i, max);\n    heapify(array, arrayLength, max, animations);\n  }\n}\n\nfunction doHeapSort(arr, animations) {\n  let array = arr.slice();\n  let arrayLength = array.length;\n\n  for (var i = Math.floor(arrayLength / 2); i >= 0; i -= 1) {\n    heapify(array, arrayLength, i, animations);\n  }\n\n  for (i = array.length - 1; i > 0; i--) {\n    pushAnimations(animations, array, 0, i);\n    swap(array, 0, i);\n    heapify(array, i, 0, animations);\n  }\n}\n","import React from 'react';\nimport $ from 'jquery';\nimport './ArrayBar.scss';\n\nconst ArrayBar = props => {\n  const array = props.array;\n  const numWidth = Math.floor($(document).width() / (array.length * 3));\n  const width = `${numWidth}px`;\n  const numMargin =\n    array.length < 5\n      ? 10\n      : array.length < 8\n      ? 8\n      : array.length < 11\n      ? 6\n      : array.length < 20\n      ? 4\n      : array.length < 50\n      ? 3.5\n      : array.length < 100\n      ? 3\n      : array.length < 130\n      ? 2.5\n      : 2;\n  const margin = `${numMargin}px`;\n  const color = numWidth > 20 ? 'white' : 'transparent';\n  const numFont =\n    numWidth > 70\n      ? 23\n      : numWidth > 60\n      ? 18\n      : numWidth > 50\n      ? 16\n      : numWidth > 40\n      ? 14\n      : numWidth > 30\n      ? 12\n      : numWidth > 20\n      ? 10\n      : 8;\n  const fontSize = `${numFont}px`;\n\n  return (\n    <div className='bar-container'>\n      {array.map((value, idx) => (\n        <div\n          className='array-bar'\n          key={idx}\n          style={{\n            height: `${value}px`,\n            width: width,\n            marginLeft: margin,\n            marginRigh: margin,\n            color: color,\n            fontSize: fontSize\n          }}\n        >\n          {value}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ArrayBar;\n","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport './Footer.scss';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div>\n        <div className='footer-container'>\n          <div className='footer-content'>\n            <Fade left>\n              <h4>\n                Copyright <i className='fa fa-copyright' /> 2018. All rights\n                reserved.\n              </h4>\n            </Fade>\n            <Fade right>\n              <div>\n                <span>\n                  Made with{' '}\n                  <span>\n                    <i className='fa fa-heart' style={{ color: 'red' }} />\n                  </span>{' '}\n                  by{' '}\n                  <a\n                    href='//github.com/nggbaobkit/sorting-visualizer'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    className='font-weight-bold'\n                  >\n                    nggbao <i className='fa fa-external-link' />\n                  </a>\n                </span>\n              </div>\n            </Fade>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { Button } from 'semantic-ui-react';\n\nimport './SortingVisualizer.scss';\nimport { getMergeSortAnimations } from '../SortingAlgorithms/MergeSort.js';\nimport { getBubbleSortAnimations } from '../SortingAlgorithms/BubbleSort.js';\nimport { getQuickSortAnimations } from '../SortingAlgorithms/QuickSort.js';\nimport { getHeapSortAnimations } from '../SortingAlgorithms/HeapSort.js';\nimport ArrayBar from '../ArrayBar/ArrayBar';\nimport Footer from '../Footer/Footer';\n\nimport variables from '../styles/core.scss';\n\nconst PRIMARY_COLOR = variables.primaryColor;\nconst SORTING_COLOR = variables.sortingColor;\nconst MAX_VALUE_ARRAY = 400;\nconst INITIAL_ARRAY_SIZE = 75;\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      arraySize: 0,\n      isDisabled: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ arraySize: INITIAL_ARRAY_SIZE });\n    this.resetArray();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.arraySize !== this.state.arraySize) {\n      this.resetArray();\n    }\n  }\n\n  getAnimationSpeed() {\n    let arrayLength = this.state.array.length;\n    let speed =\n      1000 - Math.pow(arrayLength, 2) > 10\n        ? 1000 - Math.pow(arrayLength, 2)\n        : 10;\n    return speed;\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < this.state.arraySize; i++) {\n      array.push(randomIntFromInterval(5, MAX_VALUE_ARRAY));\n    }\n    array[randomIntFromInterval(0, this.state.arraySize)] = MAX_VALUE_ARRAY;\n    this.setState({ array });\n  }\n\n  performAnimations(animations) {\n    this.setState({ isDisabled: true });\n    let swappedArray = this.state.array.slice();\n    for (let i = 0; i < animations.length; i++) {\n      let arrayBars = document.getElementsByClassName('array-bar');\n      let isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        let [barOneIdx, barTwoIdx] = animations[i];\n        let barOneStyle = arrayBars[barOneIdx].style;\n        let barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SORTING_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.getAnimationSpeed());\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, barTwoIdx, newOneHeight, newTwoHeight] = animations[\n            i\n          ];\n          swappedArray[barOneIdx] = newOneHeight;\n          swappedArray[barTwoIdx] = newTwoHeight;\n          this.setState({ array: swappedArray });\n        }, i * this.getAnimationSpeed());\n      }\n    }\n    setTimeout(() => {\n      this.setState({ isDisabled: false });\n    }, animations.length * this.getAnimationSpeed());\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.array);\n    this.performAnimations(animations);\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n    this.performAnimations(animations);\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n    this.performAnimations(animations);\n  }\n\n  heapSort() {\n    const animations = getHeapSortAnimations(this.state.array);\n    this.performAnimations(animations);\n  }\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <div>\n        <div className='header-container'>\n          <Fade top>\n            <h1 className='header-content'>\n              <img className='app-logo' src='columns.png' alt='logo' />\n              Sorting Visualizer\n            </h1>\n          </Fade>\n          <h3 className='header-content' style={{ paddingLeft: '64px' }}>\n            <i class='fas fa-sliders-h'></i> Adjusting array size\n          </h3>\n          <input\n            type='range'\n            min='5'\n            max='150'\n            value={this.state.arraySize}\n            id='adjustArraySize'\n            disabled={this.state.isDisabled ? 'disabled' : ''}\n            onChange={e => this.setState({ arraySize: e.target.value })}\n          />\n        </div>\n        <ArrayBar array={array}></ArrayBar>\n        <div className='button-container'>\n          <Button\n            primary\n            disabled={this.state.isDisabled}\n            onClick={() => this.resetArray()}\n          >\n            <i className='fa fa-bolt left' /> Generate new array\n          </Button>\n          <Button\n            secondary\n            disabled={this.state.isDisabled}\n            onClick={() => this.mergeSort()}\n          >\n            Merge Sort!\n          </Button>\n          <Button\n            secondary\n            disabled={this.state.isDisabled}\n            onClick={() => this.bubbleSort()}\n          >\n            Bubble Sort!\n          </Button>\n          <Button\n            secondary\n            disabled={this.state.isDisabled}\n            onClick={() => this.quickSort()}\n          >\n            Quick Sort!\n          </Button>\n          <Button\n            secondary\n            disabled={this.state.isDisabled}\n            onClick={() => this.heapSort()}\n          >\n            Heap Sort!\n          </Button>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import { swap, pushAnimations } from './Utilities';\n\nexport function getBubbleSortAnimations(arr) {\n  let animations = [];\n  let array = arr.slice();\n\n  for (let i = array.length - 1; i > 0; i--) {\n    for (let j = 0; j < i; j++) {\n      if (array[j] > array[j + 1]) {\n        pushAnimations(animations, array, j, j + 1);\n        swap(array, j, j + 1);\n      }\n    }\n  }\n  return animations;\n}\n","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"rgba(0,32,63,0.8)\",\"secondaryColor\":\"rgba(215,240,229,0.6)\",\"sortingColor\":\"#f2aa4c\"};"],"sourceRoot":""}